{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","provider","web3","web3Api","setWeb3Api","account","setAccount","useEffect","loadProvider","a","detectEthereumProvider","Web3","console","error","getAccount","eth","getAccounts","accounts","className","onClick","request","method","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4tBA2DeA,MAtDf,WAEE,MAA8BC,mBAAS,CACrCC,SAAU,KACVC,KAAM,OAFR,mBAAOC,EAAP,KAAgBC,EAAhB,KAKA,EAA8BJ,mBAAS,MAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAyBA,OAvBAC,qBAAU,WACR,IAAMC,EAAY,uCAAG,4BAAAC,EAAA,sEACIC,MADJ,QACbT,EADa,QAGjBG,EAAW,CACTF,KAAM,IAAIS,IAAKV,GACfA,aAGFW,QAAQC,MAAM,4BARG,2CAAH,qDAWlBL,MACC,IAEHD,qBAAU,WACR,IAAMO,EAAU,uCAAG,4BAAAL,EAAA,sEACMN,EAAQD,KAAKa,IAAIC,cADvB,OACXC,EADW,OAEjBX,EAAWW,EAAS,IAFH,2CAAH,qDAIhBd,EAAQD,MAAQY,MACf,CAACX,EAAQD,OAGV,qBAAKgB,UAAU,iBAAf,SACE,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,yBAAf,SACE,kDAAoB,kDAEtB,wBAAQA,UAAU,8BAAlB,oBACA,wBAAQA,UAAU,wBAAlB,sBACA,wBAAQA,UAAU,iBAAiBC,QAAU,kBAC3ChB,EAAQF,SAASmB,QAAQ,CAAEC,OAAQ,yBADrC,4BAGA,sBAAMH,UAAU,GAAhB,SACE,8BACE,0DACCb,GAAoB,4BCvClBiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a668ab36.chunk.js","sourcesContent":["import './App.css';\nimport 'bulma/css/bulma.min.css';\nimport Web3 from 'web3';\nimport { useState,useEffect } from 'react';\nimport detectEthereumProvider from '@metamask/detect-provider';\nfunction App() {\n\n  const [web3Api, setWeb3Api] = useState({\n    provider: null,\n    web3: null,\n  });\n\n  const [account, setAccount] = useState(null);\n\n  useEffect(() => {\n    const loadProvider = async () => {\n      const provider = await detectEthereumProvider();\n      if (provider) {\n        setWeb3Api({\n          web3: new Web3(provider),\n          provider,\n        })\n      } else {\n        console.error(\"Please, install Metamask\")\n      }\n    }\n    loadProvider();\n  }, []);\n\n  useEffect(() => {\n    const getAccount = async () => {\n      const accounts = await web3Api.web3.eth.getAccounts();\n      setAccount(accounts[0]);\n    }\n    web3Api.web3 && getAccount();\n  }, [web3Api.web3]);\n\n  return (\n    <div className=\"faucet-wrapper\">\n      <div className=\"faucet\">\n        <div className=\"balance-view is-size-2\">\n          <p>Current Balance: <strong> 10 ETH</strong></p>\n        </div>\n        <button className=\"button is-primary mr-5 ml-5\">Donate</button>\n        <button className=\"button is-danger mr-5\">Withdraw</button>\n        <button className=\"button is-link\" onClick={(() =>\n          web3Api.provider.request({ method: \"eth_requestAccounts\"})\n          )}>Connect Wallet</button>\n        <span className=\"\">\n          <p>\n            <strong>Accounts Addresses: </strong>\n            {account ? account : \"Account Denied\"}\n          </p>\n        </span>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}